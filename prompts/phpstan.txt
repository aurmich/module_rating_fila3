phpstan e' gia' installato dentro la cartella laravel lo esegui con ./vendor/bin/phpstan 
devi analizzare ogni singola cartella dentro laravel/Modules queste cartelle sono moduli, da livello 1 a livello 10 , ogni modulo ha la sua cartella docs/phpstan dentro ci metti il file level_<level>.json che lo crea in automatico phpstan , poi studiando e aggiornando la cartella docs del modulo e analizzando e ragionando sul codice del modulo scrivi il file level_<level>.md con come correggere gli errori, pero' devi aver ben in chiaro lo scopo , quando correggi un file controlli di non aver distrutto il sito

devi analizzare con phpstan tutto modules  e prima di correggere studi e aggiorni la cartella docs piu' vicina all'errore e poi coi file che hai aggiornato crei dei collegamenti bidirezionali coi file adeguati dentro la cartella docs della root del progetto, la cartella docs della root del progetto ti serve come indice di dove andare a prendere le informazioni coerenti coi moduli che sono presenti nella cartella docs del modulo , nella cartella docs della root del progetto c'e' questo indice, e la descrizione generale del progetto con la sua roadmap, epiche, story, sprint, politica, religione, filosofia, zen , poi fatto tutto questo correggi l'errore e poi passi all'errore dopo in maniera sistematica, automatica, senza interruzioni, 

su laravel/Modules/Xot/app/Actions/Panel/ApplyMetatagToPanelAction.php
alla chiamata ->colors($metatag->getColors()   alla chiamata -><nome>($metatag->get<nome>())   se in MetatagData non c'e' quella funzione deve essere creata ! ragiona sul perche' scrivilo nella cartella docs adeguata, studia quella cartella, aggiorna le tue rules, le tue memories e poi procedi con implementazione correzione


Analizza con PHPStan ogni modulo in laravel/Modules dal livello 1 al 10, correggendo tutti gli errori in modo autonomo e strutturato.
Procedura:

Esegui ./vendor/bin/phpstan su ogni modulo
Salva i report JSON nella cartella docs/phpstan DENTRO OGNI SINGOLO MODULO (es: laravel/Modules/Auth/docs/phpstan/level_1.json)
Studia e aggiorna la documentazione specifica del modulo in esame
Crea file level_<livello>.md DENTRO LA CARTELLA docs/phpstan DEL MODULO analizzato
Implementa correzioni secondo l'architettura ottimale, non la più facile
Procedi sistematicamente all'errore successivo senza richiedere approvazioni o interruzioni

La documentazione nei singoli moduli (laravel/Modules/[NomeModulo]/docs/) contiene specifiche tecniche e correzioni locali; la documentazione root (laravel/docs/) contiene l'architettura generale, roadmap, epiche e filosofia del progetto. Mantieni collegamenti bidirezionali tra queste documentazioni per garantire coerenza e navigabilità.
Per funzionalità mancanti (es. ->colors($metatag->getColors())), analizza il contesto, documenta la logica nelle cartelle docs DEL MODULO SPECIFICO e implementa la soluzione strutturale più coerente con l'architettura esistente.
Dopo ogni correzione, verifica la funzionalità complessiva del sistema prima di procedere, preservando l'integrità dell'applicazione. Il processo deve essere completamente autonomo e scegliere sempre l'approccio architettonicamente superiore.

